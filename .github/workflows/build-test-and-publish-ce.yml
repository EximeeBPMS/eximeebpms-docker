name: Build, test, and publish CE
on:
  workflow_dispatch:
    inputs:
      VERSION:
        description: 'Version to publish'
        required: true
jobs:
  build-and-test:
    runs-on: self-hosted
    strategy:
      fail-fast: false

      matrix:
        DISTRO: [run]
        PLATFORM: [amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Expose GitHub Runtime
        uses: actions/github-script@v7
        with:
          script: |
            Object.keys(process.env).forEach(function (key) {
              if (key.startsWith('ACTIONS_')) {
                core.info(`${key}=${process.env[key]}`);
                core.exportVariable(key, process.env[key]);
              }
            });
      - name: Build
        run: ./pipeline.sh
        env:
          DISTRO: ${{ matrix.DISTRO }}
          EE: false
          SNAPSHOT: false
          PLATFORM: ${{ matrix.PLATFORM }}
          VERSION: ${{ github.event.inputs.VERSION}}
      - name: Test
        run: ./test.sh
        working-directory: test
        env:
          DISTRO: ${{ matrix.DISTRO }}
          EE: false
          PLATFORM: ${{ matrix.PLATFORM }}
          VERSION: ${{ github.event.inputs.VERSION}}
  publish:
    runs-on: self-hosted
    needs: build-and-test
    strategy:
      matrix:
        DISTRO: [run]
    steps:
      - name: Determine user and set secret
        run: |
          echo "GITHUB_PAT_USER=SECRET_PAT_${{ github.actor }}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets[env.GITHUB_PAT_USER] }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Expose GitHub Runtime
        uses: actions/github-script@v7
        with:
          script: |
            Object.keys(process.env).forEach(function (key) {
              if (key.startsWith('ACTIONS_')) {
                core.info(`${key}=${process.env[key]}`);
                core.exportVariable(key, process.env[key]);
              }
            });
      - name: Publish multi-platform images
        run: ./release.sh
        env:
          DISTRO: ${{ matrix.DISTRO }}
          EE: false
          SNAPSHOT: false
          PLATFORMS: linux/amd64
          GHCR_PASSWORD: ${{ secrets[env.GITHUB_PAT_USER] }}
          GHCR_USERNAME:  ${{ github.actor }}
          VERSION: ${{ github.event.inputs.VERSION}}
